{"cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls *.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'`\nfi","output":"OneHundredDoorsTest.java:8: error: cannot find symbol\n        assertEquals(\"O\", oneHundredDoors.afterLastPassStatesOfAllDoorsWhoseAmountIs(1));\n                          ^\n  symbol:   variable oneHundredDoors\n  location: class OneHundredDoorsTest\n1 error\n","instructions":"100 doors in a row are all initially closed. You make\n100 passes by the doors. The first time through, you\nvisit every door and toggle the door (if the door is\nclosed, you open it; if it is open, you close it).\nThe second time you only visit every 2nd door (door\n#2, #4, #6, ...). The third time, every 3rd door\n(door #3, #6, #9, ...), etc, until you only visit\nthe 100th door.\n\nQuestion: What state are the doors in after the last\npass? Which are open, which are closed?\n\n[Source http://rosettacode.org]","OneHundredDoors.java":"\npublic class OneHundredDoors {\n\n    public static int answer() {\n        return 6 * 7;\n    }\n}\n","OneHundredDoorsTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class OneHundredDoorsTest {\n\n    @Test\n    public void after_the_last_pass_the_state_of_the_door_should_be_Open_if_there_is_only_one_door() {\n        assertEquals(\"O\", oneHundredDoors.afterLastPassStatesOfAllDoorsWhoseAmountIs(1));\n    }\n\n    // TODO: after_the_last_pass_the_state_of_the_doors_should_be_OpenClosed_respectively_if_there_are_two_doors\n    // TODO: after_the_last_pass_the_state_of_the_doors_should_be_OpenClosedClosed_respectively_if_there_are_three_doors\n}\n"}